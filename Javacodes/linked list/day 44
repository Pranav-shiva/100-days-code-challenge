//to merge a linked list into another at
// alternate positions
class Main
{
	Node head;


	class Node
	{
		int data;
		Node next;
		Node(int d) {data = d; next = null; }
	}


	void push(int new_data)
	{
	
		Node new_node = new Node(new_data);

	
		new_node.next = head;

		head = new_node;
	}

	void merge(Main q)
	{
		Node p_curr = head, q_curr = q.head;
		Node p_next, q_next;

		while (p_curr != null && q_curr != null) {

			p_next = p_curr.next;
			q_next = q_curr.next;

			q_curr.next = p_next; 
			p_curr.next = q_curr; 

		
			p_curr = p_next;
			q_curr = q_next;
		}
		q.head = q_curr;
	}

	
	void printLinkedList()
	{
		Node temp = head;
		while (temp != null)
		{
		System.out.print(temp.data+" ");
		temp = temp.next;
		}
		System.out.println();
	}


	public static void main(String args[])
	{
		Main llist1 = new Main();
		Main llist2 = new Main();
		llist1.push(4);
		llist1.push(5);
		llist1.push(6);

		System.out.println("First Linked List is:");
		llist1.printLinkedList();

		llist2.push(8);
		llist2.push(17);
		llist2.push(26);
		llist2.push(27);
	

		System.out.println("Second Linked List:");
		llist2.printLinkedList();

		llist1.merge(llist2);

		System.out.println("Modified first linked list:");
		llist1.printLinkedList();

	
	}
} 
